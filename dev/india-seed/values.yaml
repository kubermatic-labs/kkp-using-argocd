promtail:
  podLabels:
    seed: india

iap:
  oidc_issuer_url: https://argodemo.lab.kubermatic.io/dex
  # FIXME: Need to change in production environment to use production letsencrypt.
  customProviderCA:
      secretName: letsencrypt-staging-ca-cert
      secretKey: ca.crt
  deployments:
    alertmanager:
      name: alertmanager
      client_id: alertmanager_india
      client_secret: Xi1k5yHpMqDrfzFDnYx7X81fcWbeAhcr
      encryption_key: Xny2RZhxRU2OhYVzMGZyq5fBWOzti2iL
      config: ## see https://github.com/oauth2-proxy/oauth2-proxy/blob/master/docs/configuration/configuration.md
        approval_prompt: none
        scope: "groups openid email"
        email_domains:
          - '*'
        ## do not route health endpoint through the proxy
        skip_auth_regex:
          - '/-/healthy'
      upstream_service: alertmanager.monitoring.svc.cluster.local
      upstream_port: 9093
      ingress:
        host: "alertmanager.india.argodemo.lab.kubermatic.io"

    grafana:
      name: grafana
      client_id: grafana_india
      client_secret: hdNKLfJ02K5bxT1DpWxR4o1iGBg4eqqt
      encryption_key: EKvkYcCKtuxJXPOifZl1nHQdYBf1z71k
      config: ## see https://github.com/oauth2-proxy/oauth2-proxy/blob/master/docs/configuration/configuration.md
        approval_prompt: none
        scope: "groups openid email"
        email_domains:
          - '*'
        ## do not route health endpoint through the proxy
        skip_auth_regex:
          - '/api/health'
        ## auto-register users based on their email address
        ## Grafana is configured to look for the X-Forwarded-Email header
        pass_user_headers: true
      # enable-authorization-header: false
      upstream_service: grafana.monitoring.svc.cluster.local
      upstream_port: 3000
      ingress:
        host: "grafana.india.argodemo.lab.kubermatic.io"

    prometheus:
      name: prometheus
      client_id: prometheus_india
      client_secret: SRqPgRKVLg3hd8srpdhqJUYwIL1BcS58
      encryption_key: Rj2TnSc52EoBm1nHjii0SRmSzo5dHoB7
      config: ## see https://github.com/oauth2-proxy/oauth2-proxy/blob/master/docs/configuration/configuration.md
        approval_prompt: none
        scope: "groups openid email"
        email_domains:
          - '*'
        ## do not route health endpoint through the proxy
        skip_auth_regex:
          - '/-/healthy'
      upstream_service: prometheus.monitoring.svc.cluster.local
      upstream_port: 9090
      ingress:
        host: "prometheus.india.argodemo.lab.kubermatic.io"
        annotations:
          ingress.kubernetes.io/upstream-hash-by: "ip_hash" ## needed for prometheus federations


alertmanager:
  persistence:
    size: 4Gi

minio:
  storageClass: kubermatic-fast
  credentials:
    accessKey: 'h4pUEBuR' # 32 byte long
    secretKey: 'l1OThaFWY7cxihhkFzHzPKThJsJPofH5' # 64 byte long